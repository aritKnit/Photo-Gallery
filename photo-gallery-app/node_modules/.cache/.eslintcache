[{"/home/gitpod/Photo-Gallery/photo-gallery-app/src/index.js":"1","/home/gitpod/Photo-Gallery/photo-gallery-app/src/App.js":"2","/home/gitpod/Photo-Gallery/photo-gallery-app/src/reportWebVitals.js":"3","/home/gitpod/Photo-Gallery/photo-gallery-app/src/content/data.js":"4","/home/gitpod/Photo-Gallery/photo-gallery-app/src/modal/Modal.js":"5","/home/gitpod/Photo-Gallery/photo-gallery-app/src/components/Header.js":"6"},{"size":535,"mtime":1688836269895,"results":"7","hashOfConfig":"8"},{"size":2113,"mtime":1688840280852,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1688836269895,"results":"10","hashOfConfig":"8"},{"size":1536,"mtime":1688836750035,"results":"11","hashOfConfig":"8"},{"size":4241,"mtime":1688839769440,"results":"12","hashOfConfig":"8"},{"size":793,"mtime":1688840833524,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3372i1",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gitpod/Photo-Gallery/photo-gallery-app/src/index.js",[],[],"/home/gitpod/Photo-Gallery/photo-gallery-app/src/App.js",["34"],[],"import { useState } from 'react';\nimport { data } from './content/data';\nimport Modal from './modal/Modal';\nimport Header from './components/Header';\n\nfunction App() {\n  const [showModal, setShowModal] = useState(false);\n  const [selectedContent, setSelectedContent] = useState(null);\n\n  return (\n    <>\n      {showModal&&<Modal setShowModal={setShowModal} setSelectedContent={setSelectedContent} content={selectedContent} data={data}/>}\n      <div style={styles.main}>\n        <Header title=\"Photo Gallery\" subtitle=\"A simple photo gallery app built by stackup-username\" />\n        <div style={styles.container}>\n          {data.map((image_data, index) => {\n            return (\n              <div style={styles.imageContainer}\n                onClick={() => {\n                  setShowModal(true);\n                  setSelectedContent(image_data);\n                }}\n              >\n                <img style={styles.image} src={image_data.url} />\n                <div style={styles.imageDescription}>\n                  <p style={styles.imageDescriptionText}>{image_data.name}</p>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst styles = {\n  main: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#f0f0f0',\n    flexDirection: \"column\"\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: 10,\n    maxWidth: \"60vw\"\n  },\n  imageContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignContent: 'center',\n    cursor: 'pointer',\n  },\n  image: {\n    width: '300px',\n    height: '300px',\n    objectFit: 'cover',\n  },\n  imageDescription: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignContent: 'center',\n    width: '100%',\n    height: '50px',\n    backgroundColor: '#000000',\n    opacity: '0.5',\n  },\n  imageDescriptionText: {\n    color: '#ffffff',\n    fontSize: '16px',\n    fontWeight: 'bold',\n  },\n}\n\nexport default App\n","/home/gitpod/Photo-Gallery/photo-gallery-app/src/reportWebVitals.js",[],[],"/home/gitpod/Photo-Gallery/photo-gallery-app/src/content/data.js",[],[],"/home/gitpod/Photo-Gallery/photo-gallery-app/src/modal/Modal.js",["35","36"],[],"const Modal = ({ data, content, setSelectedContent, setShowModal }) => {\n    const { name, url, description, date, type } = content;\n    return (\n      <div style={styles.modal}>\n        <div style={styles.modalContent}>\n          <div style={styles.modalHeader}>\n            <h1 style={styles.modalTitle}>{name}</h1>\n            <button style={styles.modalCloseButton} onClick={() => setShowModal(false)}>close</button>\n          </div>\n          <div style={styles.splitContainer}>\n            <div style={styles.modalImageContainer}>\n              <img style={styles.modalImage} src={url} />\n              <p style={styles.modalDescriptionText}>{description}</p>\n            </div>\n            <div style={styles.modalDescription}>\n              <div style={styles.modalRowData}>\n                <p style={styles.modalDescriptionText}>Date</p>\n                <p style={styles.modalDescriptionText}>{date}</p>\n              </div>\n              <div style={styles.modalRowData}>\n                <p style={styles.modalDescriptionText}>Type</p>\n                <p style={styles.modalDescriptionText}>{type}</p>\n              </div>\n            </div>\n          </div>\n          <div style={styles.modalImagePicker}>\n            {data.map((image_data, index) => {\n              return (\n                <div style={styles.imageContainer}\n                  onClick={() => {\n                    setSelectedContent(image_data);\n                  }}\n                >\n                  <img style={styles.image} src={image_data.url} />\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n\n  const styles = {\n    modal: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'rgba(0,0,0,0.5)',\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        zIndex: 1\n    },\n    modalContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n        width: '50%',\n        backgroundColor: '#ffffff',\n        borderRadius: '10px',\n        padding: '20px'\n    },\n    splitContainer: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"flex-start\",\n        gap: \"10px\",\n    },\n    modalHeader: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        alignContent: 'center',\n        width: '100%',\n        marginBottom: '20px'\n    },\n    modalTitle: {\n        fontSize: '2rem',\n        fontWeight: 'bold',\n        color: '#000000',\n        textShadow: '2px 2px 2px #ffffff',\n        textAlign: 'left'\n    },\n    modalCloseButton: {\n        fontSize: '1.5rem',\n        fontWeight: 'bold',\n        color: '#000000',\n        textShadow: '2px 2px 2px #ffffff',\n        textAlign: 'left',\n        cursor: 'pointer',\n        border: 'none',\n        backgroundColor: 'transparent'\n    },\n    modalImageContainer: {\n        width: '100%',\n        height: '50%',\n        marginBottom: '20px'\n    },\n    modalImage: {\n        width: '100%',\n        height: '100%',\n        objectFit: 'contain',\n    },\n    modalDescription: {\n        display: 'flex',\n        flexDirection: \"column\",\n        width: '100%',\n    },\n    modalRowData: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        width: \"100%\"\n    },\n    modalDescriptionText: {\n        fontSize: '1rem',\n        fontWeight: 'bold',\n        color: 'gray',\n        fontStyle: \"italic\",\n        textShadow: '2px 2px 2px #ffffff',\n        textAlign: 'left'\n    },\n    modalImagePicker: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        maxWidth: \"100%\",\n        overflowX: \"scroll\",\n        gap: \"10px\",\n    },\n    image: {\n        width: '200px',\n        height: '200px',\n        objectFit: 'cover',\n    },\n    imageContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n        cursor: 'pointer',\n    },\n\n}\n\nexport default Modal;","/home/gitpod/Photo-Gallery/photo-gallery-app/src/components/Header.js",[],[],{"ruleId":"37","severity":1,"message":"38","line":24,"column":17,"nodeType":"39","endLine":24,"endColumn":66},{"ruleId":"37","severity":1,"message":"38","line":12,"column":15,"nodeType":"39","endLine":12,"endColumn":58},{"ruleId":"37","severity":1,"message":"38","line":34,"column":19,"nodeType":"39","endLine":34,"endColumn":68},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]